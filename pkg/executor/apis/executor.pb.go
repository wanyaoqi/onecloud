// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

package apis

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Command struct {
	Path                 []byte   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Args                 [][]byte `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Env                  [][]byte `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	Dir                  []byte   `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	Input                []byte   `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{0}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Command) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Command) GetEnv() [][]byte {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Command) GetDir() []byte {
	if m != nil {
		return m.Dir
	}
	return nil
}

func (m *Command) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type Response struct {
	Stdout               []byte   `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitCode             int32    `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	IsExit               bool     `protobuf:"varint,4,opt,name=is_exit,json=isExit,proto3" json:"is_exit,omitempty"`
	ErrContent           []byte   `protobuf:"bytes,5,opt,name=err_content,json=errContent,proto3" json:"err_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *Response) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *Response) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *Response) GetIsExit() bool {
	if m != nil {
		return m.IsExit
	}
	return false
}

func (m *Response) GetErrContent() []byte {
	if m != nil {
		return m.ErrContent
	}
	return nil
}

func init() {
	proto.RegisterType((*Command)(nil), "apis.Command")
	proto.RegisterType((*Response)(nil), "apis.Response")
}

func init() { proto.RegisterFile("executor.proto", fileDescriptor_12d1cdcda51e000f) }

var fileDescriptor_12d1cdcda51e000f = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0x47, 0xc9, 0xf4, 0xcf, 0xf4, 0xbb, 0xf3, 0x39, 0x48, 0x10, 0x0d, 0xba, 0xb0, 0xcc, 0xaa,
	0xab, 0x32, 0xe8, 0xd6, 0x5d, 0x99, 0x17, 0xe8, 0x0b, 0x94, 0xda, 0x5e, 0x34, 0xc8, 0x24, 0xe5,
	0x26, 0x95, 0xbe, 0x86, 0x6f, 0x2c, 0x37, 0x4d, 0xdd, 0x9d, 0x73, 0xa0, 0xf4, 0xe6, 0x07, 0x47,
	0x5c, 0x70, 0x98, 0xbd, 0xa5, 0x7a, 0x22, 0xeb, 0xad, 0x4c, 0xfb, 0x49, 0xbb, 0xd3, 0x17, 0xec,
	0x1b, 0x7b, 0xbd, 0xf6, 0x66, 0x94, 0x12, 0xd2, 0xa9, 0xf7, 0x9f, 0x4a, 0x94, 0xa2, 0xfa, 0xdf,
	0x06, 0xe6, 0xd6, 0xd3, 0x87, 0x53, 0xbb, 0x32, 0xe1, 0xc6, 0x2c, 0x6f, 0x21, 0x41, 0xf3, 0xad,
	0x92, 0x90, 0x18, 0xb9, 0x8c, 0x9a, 0x54, 0x1a, 0x3e, 0x64, 0x94, 0x77, 0x90, 0x69, 0x33, 0xcd,
	0x5e, 0x65, 0xa1, 0xad, 0x72, 0xfa, 0x11, 0x50, 0xb4, 0xe8, 0x26, 0x6b, 0x1c, 0xca, 0x7b, 0xc8,
	0x9d, 0x1f, 0xed, 0xec, 0xe3, 0x0f, 0xa3, 0xc5, 0x8e, 0x44, 0x6a, 0xf7, 0xd7, 0x91, 0x48, 0x3e,
	0xc1, 0x3f, 0x5c, 0xb4, 0xef, 0x06, 0x3b, 0xa2, 0x4a, 0x4a, 0x51, 0x65, 0x6d, 0xc1, 0xa1, 0xb1,
	0x23, 0xca, 0x07, 0xd8, 0x6b, 0xd7, 0xb1, 0x86, 0x2b, 0x8a, 0x36, 0xd7, 0xee, 0xb2, 0x68, 0x2f,
	0x9f, 0xe1, 0x80, 0x44, 0xdd, 0x60, 0x8d, 0x47, 0xb3, 0x9d, 0x03, 0x48, 0xd4, 0xac, 0xe5, 0xe5,
	0x0d, 0x8a, 0x4b, 0x1c, 0x46, 0x9e, 0xe1, 0xc0, 0xbc, 0x0d, 0x72, 0x53, 0xf3, 0x44, 0x75, 0xd4,
	0xc7, 0xe3, 0xaa, 0xdb, 0x03, 0x2a, 0x71, 0x16, 0xef, 0x79, 0xd8, 0xf2, 0xf5, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x67, 0xca, 0x09, 0x01, 0x5d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExecutorClient is the client API for Executor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutorClient interface {
	ExecCommand(ctx context.Context, opts ...grpc.CallOption) (Executor_ExecCommandClient, error)
}

type executorClient struct {
	cc *grpc.ClientConn
}

func NewExecutorClient(cc *grpc.ClientConn) ExecutorClient {
	return &executorClient{cc}
}

func (c *executorClient) ExecCommand(ctx context.Context, opts ...grpc.CallOption) (Executor_ExecCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Executor_serviceDesc.Streams[0], "/apis.Executor/ExecCommand", opts...)
	if err != nil {
		return nil, err
	}
	x := &executorExecCommandClient{stream}
	return x, nil
}

type Executor_ExecCommandClient interface {
	Send(*Command) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type executorExecCommandClient struct {
	grpc.ClientStream
}

func (x *executorExecCommandClient) Send(m *Command) error {
	return x.ClientStream.SendMsg(m)
}

func (x *executorExecCommandClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExecutorServer is the server API for Executor service.
type ExecutorServer interface {
	ExecCommand(Executor_ExecCommandServer) error
}

// UnimplementedExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedExecutorServer struct {
}

func (*UnimplementedExecutorServer) ExecCommand(srv Executor_ExecCommandServer) error {
	return status.Errorf(codes.Unimplemented, "method ExecCommand not implemented")
}

func RegisterExecutorServer(s *grpc.Server, srv ExecutorServer) {
	s.RegisterService(&_Executor_serviceDesc, srv)
}

func _Executor_ExecCommand_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExecutorServer).ExecCommand(&executorExecCommandServer{stream})
}

type Executor_ExecCommandServer interface {
	Send(*Response) error
	Recv() (*Command, error)
	grpc.ServerStream
}

type executorExecCommandServer struct {
	grpc.ServerStream
}

func (x *executorExecCommandServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *executorExecCommandServer) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Executor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apis.Executor",
	HandlerType: (*ExecutorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExecCommand",
			Handler:       _Executor_ExecCommand_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "executor.proto",
}
